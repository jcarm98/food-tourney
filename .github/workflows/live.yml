name: Deploy Food Tourney Live
on:
 # push:
 #   branches: ["main"]
 #   tags:
 #    - "*"
  workflow_dispatch:
jobs:
  deploy-live:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - run: echo "${{secrets.PRIVATE_KEY}}" >> private_key
      - run: chmod 400 private_key
    # - run: eval `ssh-agent -s` && ssh-add private_key 
    # - run: scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i private_key newfile.txt root@${{secrets.SERVER_IP}}:~/newfile.txt
    # generate and store random string for later use
      - run: echo $RANDOM | md5sum | head -c 20 > name.txt
    # run runner helper with random string argument
      - run: echo "sh ~/runner_helper_ft $(cat name.txt)" | ssh -o StrictHostKeyChecking=no -i private_key deploy@${{secrets.SERVER_IP}}
    #  - run: ssh -o StrictHostKeyChecking=no -i private_key deploy@${{secrets.SERVER_IP}} "rm -rf ~/repo && . ~/runner_helper"
    # go to random string directory
    # add node to path variable 18.9.0
      # update index with google maps api key
      - run: echo "sh ~/inject_api ~/$(cat name.txt)/Front/public/index.html" | ssh -o StrictHostKeyChecking=no -i private_key deploy@${{secrets.SERVER_IP}}
    # install yarn, build using yarn
      - run: echo "cd ~/$(cat name.txt)/Front && . ~/set_env && export PATH=/home/deploy/.nvm/versions/node/v14.17.5/bin:$PATH && npm install && yarn build" | ssh -o StrictHostKeyChecking=no -i private_key deploy@${{secrets.SERVER_IP}}
    # remove old directory
    # copy from random string directory to removed directory
    # - run: echo "rm -rf /var/www/hobbyshare && cd ~/$(cat name.txt)/Front/dist && ls >> 0frontdir.txt && cp -r ~/$(cat name.txt)/Front/dist/$(sed -n 2p 0frontdir.txt) /var/www/hobbyshare && rm -rf 0frontdir.txt" | ssh -o StrictHostKeyChecking=no -i private_key deploy@${{secrets.SERVER_IP}}
      - run: echo "rm -rf /var/www/FoodTourney && cp -r ~/$(cat name.txt)/Front/dist /var/www/FoodTourney" | ssh -o StrictHostKeyChecking=no -i private_key deploy@${{secrets.SERVER_IP}}
    # remove old backend and replace with new backend
      - run: echo "rm -rf ~/foodtourney && cp -r ~/$(cat name.txt)/Back ~/foodtourney && cd ~/foodtourney && dotnet build --configuration Release && . ~/run_server" | ssh -o StrictHostKeyChecking=no -i private_key deploy@${{secrets.SERVER_IP}}
    # remove old nginx config
    # copy nginx config to previous location
    # restart nginx
    # remove random string directory
      - run: echo "rm -rf /etc/apache2/sites-enabled/ft-live.conf && cp ~/$(cat name.txt)/live.conf /etc/apache2/sites-enabled/ft-live.conf && sudo /usr/sbin/service apache2 restart; rm -rf ~/$(cat name.txt)" | ssh -o StrictHostKeyChecking=no -i private_key deploy@${{secrets.SERVER_IP}}
      - run: eval `ssh-agent -s` && ssh-add -D
      - run: rm private_key
